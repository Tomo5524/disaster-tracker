{"version":3,"sources":["components/loader.js","images/volcano.svg","components/map.js","App.js","reportWebVitals.js","index.js"],"names":["override","css","Loader","useState","loading","color","className","size","Map","eventData","React","latitude","longitude","zoom","viewport","setViewport","_id","PopUp","showPopup","togglePopup","markers","map","ev","idx","categories","id","geometries","coordinates","length","onClick","icon","faFireAlt","style","height","width","src","volcanoIcon","alt","closeButton","closeOnClick","onClose","anchor","title","onViewportChange","mapStyle","mapboxApiAccessToken","process","App","setEventData","setLoading","useEffect","a","fetch","res","json","events","console","log","fetchData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cfc0970.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n// import { BeatLoader } from \"react-spinners\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction Loader() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div className=\"vh-100 d-flex justify-content-center align-items-center\">\n      <div className=\"sweet-loading\">\n        <ClipLoader color={color} loading={loading} css={override} size={150} />\n        <h1 className=\"mt-2\">Loading...</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","export default __webpack_public_path__ + \"static/media/volcano.8e38519a.svg\";","import React from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFireAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport volcanoIcon from \"../images/volcano.svg\";\n\nconst Map = ({ eventData }) => {\n  const [viewport, setViewport] = React.useState({\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 8,\n  });\n\n  const [showPopup, togglePopup] = React.useState({\n    _id: null,\n    PopUp: false,\n  });\n\n  const markers = eventData.map((ev, idx) => {\n    if (\n      ev.categories[0].id === 8 ||\n      (ev.categories[0].id === 12 && ev.geometries[0].coordinates.length === 2)\n    ) {\n      return (\n        <>\n          <Marker\n            key={idx}\n            id={ev.id}\n            latitude={ev.geometries[0].coordinates[1]}\n            longitude={ev.geometries[0].coordinates[0]}\n            onClick={() => {\n              togglePopup({ _id: ev.id, PopUp: true });\n            }}\n          >\n            {ev.categories[0].id === 8 ? (\n              <FontAwesomeIcon\n                className=\"marker\"\n                icon={faFireAlt}\n                style={{\n                  color: \"red\",\n                  height: `${6 * viewport.zoom}px`,\n                  width: `${6 * viewport.zoom}px`,\n                }}\n              />\n            ) : (\n              <div className=\"skill icon-div\">\n                <img\n                  className=\"marker\"\n                  src={volcanoIcon}\n                  alt=\"Volcano\"\n                  style={{\n                    color: \"black\",\n                    height: `${6 * viewport.zoom}px`,\n                    width: `${6 * viewport.zoom}px`,\n                  }}\n                />\n              </div>\n            )}\n          </Marker>\n          {showPopup && showPopup._id === ev.id && (\n            <Popup\n              latitude={ev.geometries[0].coordinates[1]}\n              longitude={ev.geometries[0].coordinates[0]}\n              closeButton={true}\n              closeOnClick={false}\n              // dynamicPosition={true}\n              onClose={() => togglePopup(false)}\n              anchor=\"top\"\n              className=\"popup-box\"\n            >\n              <div className=\"popup-box\">\n                Title: <p className=\"title d-inline\">{ev.title}</p>\n              </div>\n            </Popup>\n          )}\n        </>\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        width=\"100vw\"\n        height=\"100vh\"\n        onViewportChange={(viewport) => setViewport(viewport)}\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API}\n      >\n        {markers}\n      </ReactMapGL>\n    </div>\n  );\n};\n\nexport default Map;\n","import { useEffect, useState } from \"react\";\nimport Loader from \"./components/loader\";\nimport Map from \"./components/map\";\n\nconst App = () => {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const res = await fetch(\n          \"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\"\n        );\n        const { events } = await res.json();\n        setEventData(events);\n        setLoading(false);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return <div>{!loading ? <Map eventData={eventData} /> : <Loader />}</div>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}